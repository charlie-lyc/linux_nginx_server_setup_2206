## 방화벽 설정
- NginX 설정을 위한 준비 과정
- 내부 방화벽을 사용하게 기존의 보안그룹 설정이 적용되지 않게 되므로 3001 삭제

% sudo ufw enable 
Command may disrupt existing ssh connections. Proceed with operation (y|n)? y
Firewall is active and enabled on system startup

% sudo ufw allow ssh
Rule added
Rule added (v6)

% sudo ufw allow http
Rule added
Rule added (v6)

% sudo ufw allow https
Rule added
Rule added (v6)


## NginX 설치 및 설정 그리고 테스트
% sudo apt install NginX
...

% sudo nano /etc/nginx/sites-available/default

[1] server_name testApp.com www.testApp.com;
[2] location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Hosst $host;
        proxy_cache_bypass $http_upgrade;
    }

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;                                           

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}

% sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

% sudo service nginx restart

-----------------------------------------------------
## 이제는 포트 없이 아래주소로 접속이 가능
(단, AWS EC2 일경우 보안그룹 설정에 80 또는 443 추가 필요)
http://13.125.74.32

## 아래와 같이 나온다면 성공
Hello World!
-----------------------------------------------------