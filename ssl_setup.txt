## SSL 설정

% sudo apt update

% sudo apt upgrade

% sudo apt install certbot python3-certbot-nginx

% sudo service nginx stop

% sudo certbot certonly --standalone -d seawater-ems.site -d www.seawater-ems.site
...

% sudo service nginx restart

% sudo nano /etc/nginx/sites-available/default

server {
        # SSL configuration
        
        listen 443 ssl http2 default_server;
        # listen [::]:443 ssl http2 default_server;
        client_max_body_size 10M;
        
        ssl_certificate /etc/letsencrypt/live/testApp.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/testApp.com/privkey.pem;
        ssl_dhparam /etc/nginx/ssl/dhparams.pem;
        add_header Strict-Transport-Security max-age=31536000;
        server_name testApp.com www.testApp.com;

        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://localhost:3000;
        }
}

server {
        # SSL configuration

        listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        client_max_body_size 10M;
        ssl_certificate /etc/letsencrypt/live/backend.testApp.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/backend.testApp.com/privkey.pem;
        ssl_dhparam /etc/nginx/ssl/dhparams.pem;

        server_name backend.testApp.com;
        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass https://localhost:5001;
        }
}

## Only valid for 90 days, test the renewal process with
% sudo certbot renew --dry-run


## 위의 방법은 가급적 개발 또는 테스트 목적으로만 사용하길 바라며,
## 실제 서비스의 경우에는 클라우드 플랫폼에서 제공되는 자동 갱신 설정을 이용하는 것이 안전함  
