## SSL 설정

% sudo apt update

% sudo apt upgrade

% sudo apt install certbot python3-certbot-nginx

% sudo service nginx stop

% sudo certbot --nginx -d seawater-ems.site -d www.seawater-ems.site
...

% sudo service nginx restart

% sudo nano /etc/nginx/sites-available/default

server {
        # SSL configuration
        
        listen 443 ssl http2 default_server;
        # listen [::]:443 ssl http2 default_server;
        client_max_body_size 10M;
        
        ssl_certificate /etc/letsencrypt/live/testApp.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/testApp.com/privkey.pem;
        ssl_dhparam /etc/nginx/ssl/dhparams.pem;
        add_header Strict-Transport-Security max-age=31536000;
        server_name testApp.com www.testApp.com;

        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://localhost:3000;
        }
}

server {
        # SSL configuration

        listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        client_max_body_size 10M;
        ssl_certificate /etc/letsencrypt/live/backend.testApp.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/backend.testApp.com/privkey.pem;
        ssl_dhparam /etc/nginx/ssl/dhparams.pem;

        server_name backend.testApp.com;
        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass https://localhost:5001;
        }
}

% sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

% sudo nginx -s reload
------------------------------------------------------------------
## 이제 브라우저에서 https://testApp.com 
## 또는 https://www.testApp.com 으로 접속 가능
------------------------------------------------------------------

## Verify certbot automatic renewal
% sudo systemctl status certbot.timer

## Veryfy certificate information(ex: expiry date)
% sudo certbot certificates

## Test the renewal process
% sudo certbot renew --dry-run

## Renew manually if you can remember before passing 90 days
% sudo service nginx stop
% sudo certbot renew
% sudo service nginx restart

## Renew automatically
% sudo nano /etc/crontab

# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
#
15 3    1 * *   root    renew --quiet --renew-hook "/etc/init.d/nginx reload"


## 위의 방법은 가급적 개발 또는 테스트 목적으로만 사용하길 바라며,
## 실제 서비스의 경우에는 클라우드 플랫폼에서 제공되는 자동 갱신 설정을 이용하는 것이 안전함  
